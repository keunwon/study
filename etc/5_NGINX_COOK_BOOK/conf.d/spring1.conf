upstream backend {
    server  '192.168.45.42:8081'    weight=1    max_fails=3     fail_timeout=3s;
    server  '192.168.45.42:8082'    weight=2    max_fails=3     fail_timeout=3s;
    server  '192.168.45.42:8080'    backup;
}

split_clients "${remote_addr}AAA" $variant {
    30.0%   '192.168.45.42:8081';
    10.0%   '192.168.45.42:8082';
    *       '192.168.45.42:8080';
}

map $geoip_country_code $country_access {
    'US'    1;
    'RU'    1;
    default 0;
}

map $request_method $cors_method {
    OPTIONS 11;
    GET     1;
    POST    1;
    default 0;
}

geoip_country /etc/nginx/geoip/GeoIP.dat;
geoip_city /etc/nginx/geoip/GeoIPCity.dat;
#geoip_proxy 10.0.16.0/26;
geoip_proxy_recursive on;

limit_conn_zone $binary_remote_addr zone=ddos:10m;
limit_conn_status 429;
limit_conn_dry_run off;

limit_req_zone $binary_remote_addr zone=limitbyaddr:10m rate=1r/s;
limit_req_status 429;

proxy_cache_path /data/nginx/mvc keys_zone=mvc:10m levels=1:2 inactive=5m max_size=1g;
proxy_cache_lock off;
proxy_cache_lock_age 5s;
proxy_cache_lock_timeout 5s;
proxy_cache_key '$host$request_uri';
proxy_cache_valid 10s;


server {
    listen 443 ssl;
    server_tokens off;
    server_name 'spring1.com';

    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_certificate /etc/nginx/ssl/server.crt;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # proxy_ssl_verify on;
    # proxy_ssl_verify_depth 2;
    # proxy_ssl_protocols TLSv1.2;
    # proxy_ssl_certificate ;
    # proxy_ssl_certificate_key ;
    
    #limit_conn ddos 1;
    #limit_req zone=limitbyaddr burst=3 delay=5;

   if ($country_access = '1') {
        set $country_access 0;
        return 403;
   }

    error_page 403                  /403.html;
    location = /403.html {
        root /usr/share/nginx/html;
    }

    error_page  500 502 503 504     /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    location /chapter02 {
        rewrite ^/chapter02(.*)$ $1 break;
        proxy_pass http://backend;
        proxy_cache mvc;
    }

    location /chapter02/no-cache {
        rewrite ^/chapter02(.*)$ $1 break;
        proxy_pass http://backend;
        proxy_cache_bypass 1;
    }

    location /chapter02/dump/ {
        rewrite ^/chapter02(.*)$ $1 break;
        proxy_pass http://backend;
        limit_rate_after 10m;
        limit_rate 500k;
        proxy_cache mvc;
        proxy_cache_methods GET HEAD POST;
        proxy_cache_valid 200 201 1m;
    }
    
    location /chapter03 {
        rewrite ^/chapter03(.*)$ $1 break;
        proxy_pass http://$variant;
    }

    location /auth {
        rewrite ^/auth(.*)$ $1 break;
        proxy_pass http://backend;
        auth_basic "Private site";
        auth_basic_user_file conf.d/passwd;
    }

    # location /ipblock {
    #     rewrite ^/ipblock(.*)$ $1 break;
    #     deny 192.168.45.43;
    #     allow 192.168.45.43/20;
    #     deny all;
    # }

    # location /cors {
    #     if ($cors_method ~ '1') {
    #         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #         add_header 'Access-Control-Allow-Origin' '$server_name';
    #         add_header 'Access-Control-Allow-Headers' 'DNT, Depp-Alive, User-Agent, X-Requested-With, IF-Modified-Sinc, Cache-Control, Content-Type'
    #     }
    #     if ($cors_method = '11') {
    #         add_header 'Access-Control-Max-Age' 1728000;
    #         add_header 'Content-Type' 'text/plain; charset=UTF-8';
    #         add_header 'Content-Length' 0;
    #         return 204;
    #     }

    location ~* \.(css|js|)$ {
        expires 1y;
        add_header Cache-Control "public";
    }
}
